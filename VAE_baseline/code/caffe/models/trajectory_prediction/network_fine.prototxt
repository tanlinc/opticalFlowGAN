













  layer {
    name: "imdata"
    top: "imdata"
    type: "DummyData"
      dummy_data_param{
        num: 16
        channels: 3
        height: 256
        width: 320
        data_filler{
          type: "constant"
          value: 0
        }
   }
  }

layer {
  name: "rawtrajdata"
  top: "rawtrajdata"
  type: "DummyData"
      dummy_data_param{
        num: 16
        channels: 10
        height: 64
        width: 80
        data_filler{
          type: "constant"
          value: 0
        }
   }
}

layer {
  name: "rawpooldata"
  type: "Pooling"
  bottom: "rawtrajdata"
  top: "rawpooldata"
  pooling_param {
    pool: AVE
    kernel_size: 4
    stride: 4
  }
}

  layer {
    name: "SlicedTraj"
    type: "Slice"
    bottom: "rawpooldata"
    top: "xdata"
    top: "ydata"
    slice_param {
       axis: 1
       slice_point: 5
    }
  }

layer {
  name: "axdata"
  type: "Eltwise"
  bottom: "xdata"
  bottom: "xdata"
  top: "axdata"
  eltwise_param {
    operation: PROD
  }
}

layer{
  name: "xsum"
  type: "Convolution"
  bottom: "axdata"
  top: "xsum"

  convolution_param {
    num_output: 1
    kernel_size: 1
    stride: 1
    pad: 0
        weight_filler {
          type: "constant"
          value: 1.0
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult:0
    decay_mult: 0
  }
}

  layer {
    name: "xsumsquare"
    type: "Power"
    bottom: "xsum"
    top: "xsumsquare"
      power_param{
        power: 0.5
        scale: 0.033
        shift: 0.0000000000000001
      }
  }


layer {
  name: "avgx"
  type: "Pooling"
  bottom: "xsumsquare"
  top: "avgx"
  pooling_param {
    pool: AVE
    kernel_size: 20
    stride: 20
    pad: 0
  }
}

layer {
  name: "aydata"
  type: "Eltwise"
  bottom: "ydata"
  bottom: "ydata"
  top: "aydata"
  eltwise_param {
    operation: PROD
  }
}

layer{
  name: "ysum"
  type: "Convolution"
  bottom: "aydata"
  top: "ysum"

  convolution_param {
    num_output: 1
    kernel_size: 1
    stride: 1
    pad: 0
        weight_filler {
          type: "constant"
          value: 1.0
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult:0
    decay_mult: 0
  }
}

  layer {
    name: "ysumsquare"
    type: "Power"
    bottom: "ysum"
    top: "ysumsquare"
      power_param{
        power: 0.5
        scale: 0.033
        shift: 0.0000000000000001
      }
  }


layer {
  name: "avgy"
  type: "Pooling"
  bottom: "ysumsquare"
  top: "avgy"
  pooling_param {
    pool: AVE
    kernel_size: 20
    stride: 20
    pad: 0
  }
}

layer{
  name: "avgsample"
  type: "Concat"
  bottom: "avgx"
  bottom: "avgy"
  top: "avgsample"
  concat_param{
    axis: 1
  }
}

layer{
  name: "avgsample_reshape"
  type: "Reshape"
  bottom: "avgsample"
  top: "avgsample_reshape"
  reshape_param{
   shape {
    dim: 0
    dim: 0
    dim: -1
}
  }
}


layer{
  name: "avgsamplewide"
  type: "Concat"
  bottom: "avgsample_reshape"
  bottom: "avgsample_reshape"
  bottom: "avgsample_reshape"
  bottom: "avgsample_reshape"
  top: "avgsamplewide"
  concat_param{
    axis: 2
  }
}

layer{
  name: "avgsamplewide_reshape"
  type: "Reshape"
  bottom: "avgsamplewide"
  top: "avgsamplewide_reshape"
  reshape_param{
   shape {
    dim: 0
    dim: 0
    dim: 0
    dim: -1
}
  }
}


layer{
  name: "avgsampletall"
  type: "Concat"
  bottom: "avgsamplewide_reshape"
  bottom: "avgsamplewide_reshape"
  bottom: "avgsamplewide_reshape"
  bottom: "avgsamplewide_reshape"
  bottom: "avgsamplewide_reshape"
  top: "avgsampletall"
  concat_param{
    axis: 3
  }
}

layer{
  name: "trajnorm"
  type: "Deconvolution"
  bottom: "avgsampletall"
  top: "trajnorm"
  convolution_param {
  num_output: 10
  group: 2
  kernel_size: 8
  stride: 4
  pad: 2
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer {
  name: "trajpower"
  type: "Power"
  bottom: "trajnorm"
  top: "trajpower"
  power_param {
   power: -1.0
  }
}

layer {
  name: "normtrajdata"
  type: "Eltwise"
  bottom: "rawpooldata"
  bottom: "trajpower"
  top: "normtrajdata"
  eltwise_param {
    operation: PROD
  }
}



layer {
  name: "imageconv1"
  type: "Convolution"
  bottom: "imdata"
  top: "imageconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    pad: 4
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm1"
  type: "BatchNorm"
  bottom: "imageconv1"
  top: "imageconv1"
}

layer {
  name: "imagerelu1"
  type: "ReLU"
  bottom: "imageconv1"
  top: "imageconv1"
}
layer {
  name: "imagenorm1"
  type: "LRN"
  bottom: "imageconv1"
  top: "imagenorm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "imagepool1"
  type: "Pooling"
  bottom: "imagenorm1"
  top: "imagepool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "imageconv2"
  type: "Convolution"
  bottom: "imagepool1"
  top: "imageconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm2"
  type: "BatchNorm"
  bottom: "imageconv2"
  top: "imageconv2"
}

layer {
  name: "imagerelu2"
  type: "ReLU"
  bottom: "imageconv2"
  top: "imageconv2"
}
layer {
  name: "imagenorm2"
  type: "LRN"
  bottom: "imageconv2"
  top: "imagenorm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "imagepool2"
  type: "Pooling"
  bottom: "imagenorm2"
  top: "imagepool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "imageconv3"
  type: "Convolution"
  bottom: "imagepool2"
  top: "imageconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm3"
  type: "BatchNorm"
  bottom: "imageconv3"
  top: "imageconv3"
}

layer {
  name: "imagerelu3"
  type: "ReLU"
  bottom: "imageconv3"
  top: "imageconv3"
}
layer {
  name: "imageconv4"
  type: "Convolution"
  bottom: "imageconv3"
  top: "imageconv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm4"
  type: "BatchNorm"
  bottom: "imageconv4"
  top: "imageconv4"
}

layer {
  name: "imagerelu4"
  type: "ReLU"
  bottom: "imageconv4"
  top: "imageconv4"
}
layer {
  name: "imageconv5"
  type: "Convolution"
  bottom: "imageconv4"
  top: "imageconv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm5"
  type: "BatchNorm"
  bottom: "imageconv5"
  top: "imageconv5"
}

layer {
  name: "imagerelu5"
  type: "ReLU"
  bottom: "imageconv5"
  top: "imageconv5"
}
layer {
  name: "imageconv6"
  type: "Convolution"
  bottom: "imageconv5"
  top: "imageconv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm6"
  type: "BatchNorm"
  bottom: "imageconv6"
  top: "imageconv6"
}

layer {
  name: "imagerelu6"
  type: "ReLU"
  bottom: "imageconv6"
  top: "imageconv6"
}

layer {
  name: "imageconv7"
  type: "Convolution"
  bottom: "imageconv6"
  top: "imageconv7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm7"
  type: "BatchNorm"
  bottom: "imageconv7"
  top: "imageconv7"
}

layer {
  name: "imagerelu7"
  type: "ReLU"
  bottom: "imageconv7"
  top: "imageconv7"
}

layer {
  name: "imageconv8"
  type: "Convolution"
  bottom: "imageconv7"
  top: "imageconv8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm8"
  type: "BatchNorm"
  bottom: "imageconv8"
  top: "imageconv8"
}

layer {
  name: "imagerelu8"
  type: "ReLU"
  bottom: "imageconv8"
  top: "imageconv8"
}

layer {
  name: "imageconv9"
  type: "Convolution"
  bottom: "imageconv8"
  top: "imageconv9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm9"
  type: "BatchNorm"
  bottom: "imageconv9"
  top: "imageconv9"
}

layer {
  name: "imagerelu9"
  type: "ReLU"
  bottom: "imageconv9"
  top: "imageconv9"
}

layer {
  name: "imageconv10"
  type: "Convolution"
  bottom: "imageconv9"
  top: "imageconv10"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm10"
  type: "BatchNorm"
  bottom: "imageconv10"
  top: "imageconv10"
}

layer {
  name: "imagerelu10"
  type: "ReLU"
  bottom: "imageconv10"
  top: "imageconv10"
}

layer {
  name: "imageconv11"
  type: "Convolution"
  bottom: "imageconv10"
  top: "imageconv11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm11"
  type: "BatchNorm"
  bottom: "imageconv11"
  top: "imageconv11"
}

layer {
  name: "imagerelu11"
  type: "ReLU"
  bottom: "imageconv11"
  top: "imageconv11"
}

layer {
  name: "imageconv12"
  type: "Convolution"
  bottom: "imageconv11"
  top: "imageconv12"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm12"
  type: "BatchNorm"
  bottom: "imageconv12"
  top: "imageconv12"
}

layer {
  name: "imagerelu12"
  type: "ReLU"
  bottom: "imageconv12"
  top: "imageconv12"
}


layer {
  name: "imageconv13"
  type: "Convolution"
  bottom: "imageconv12"
  top: "imageconv13"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm13"
  type: "BatchNorm"
  bottom: "imageconv13"
  top: "imageconv13"
}


layer {
  name: "imagerelu13"
  type: "ReLU"
  bottom: "imageconv13"
  top: "imageconv13"
}

layer {
  name: "imageconv14"
  type: "Convolution"
  bottom: "imageconv13"
  top: "imageconv14"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imagebatchnorm14"
  type: "BatchNorm"
  bottom: "imageconv14"
  top: "imageconv14"
}


layer {
  name: "imagerelu14"
  type: "ReLU"
  bottom: "imageconv14"
  top: "imageconv14"
}





layer{
  name: "encinput_mag"
   type: "Concat"
   bottom: "trajnorm"
   bottom: "imageconv12"
   top: "encinput_mag"
   concat_param{
   axis: 1
  }
}

layer{
  name: "encinput_traj"
  type: "Concat"
  bottom: "normtrajdata"
  bottom: "imageconv12"
  top: "encinput_traj"
  concat_param{
   axis: 1
  }
}


layer {
  name: "trajconv1"
  type: "Convolution"
  bottom: "encinput_traj"
  top: "trajconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    pad: 4
        weight_filler {
          type: "xavier"
          std: 0.001
        }
  }
}

layer { 
  name: "trajbatchnorm1"
  type: "BatchNorm"
  bottom: "trajconv1"
  top: "trajconv1"
}

layer {
  name: "trajrelu1"
  type: "ReLU"
  bottom: "trajconv1"
  top: "trajconv1"
}
layer {
  name: "trajnorm1"
  type: "LRN"
  bottom: "trajconv1"
  top: "trajnorm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "trajpool1"
  type: "Pooling"
  bottom: "trajnorm1"
  top: "trajpool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "trajconv2"
  type: "Convolution"
  bottom: "trajpool1"
  top: "trajconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
        weight_filler {
          type: "xavier"
          std: 0.001
        }
  }
}

layer { 
  name: "trajbatchnorm2"
  type: "BatchNorm"
  bottom: "trajconv2"
  top: "trajconv2"
}

layer {
  name: "trajrelu2"
  type: "ReLU"
  bottom: "trajconv2"
  top: "trajconv2"
}
layer {
  name: "trajnorm2"
  type: "LRN"
  bottom: "trajconv2"
  top: "trajnorm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "trajpool2"
  type: "Pooling"
  bottom: "trajnorm2"
  top: "trajpool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "trajconv3"
  type: "Convolution"
  bottom: "trajpool2"
  top: "trajconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
        weight_filler {
          type: "xavier"
          std: 0.001
        }
  }
}

layer { 
  name: "trajbatchnorm3"
  type: "BatchNorm"
  bottom: "trajconv3"
  top: "trajconv3"
}

layer {
  name: "trajrelu3"
  type: "ReLU"
  bottom: "trajconv3"
  top: "trajconv3"
}
layer {
  name: "trajconv4"
  type: "Convolution"
  bottom: "trajconv3"
  top: "trajconv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
        weight_filler {
          type: "xavier"
          std: 0.001
        }
  }
}

layer { 
  name: "trajbatchnorm4"
  type: "BatchNorm"
  bottom: "trajconv4"
  top: "trajconv4"
}

layer {
  name: "trajrelu4"
  type: "ReLU"
  bottom: "trajconv4"
  top: "trajconv4"
}
layer {
  name: "trajconv5"
  type: "Convolution"
  bottom: "trajconv4"
  top: "trajconv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
        weight_filler {
          type: "xavier"
          std: 0.001
        }
  }
}

layer { 
  name: "trajbatchnorm5"
  type: "BatchNorm"
  bottom: "trajconv5"
  top: "trajconv5"
}

layer {
  name: "trajrelu5"
  type: "ReLU"
  bottom: "trajconv5"
  top: "trajconv5"
}



    layer {
      name: "themagzmu"
      type: "Convolution"
      bottom: "encinput_mag"
      top: "themagzmu"
      param {
        lr_mult: 1
        decay_mult: 0
      }
      param {
        lr_mult: 2
        decay_mult: 0
      }
      convolution_param {
        num_output: 2
        kernel_size: 1
        stride: 1
        pad: 0
        weight_filler {
          type: "gaussian"
          std: .0001
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }

layer {
  name: "themagzpoolmu"
  type: "Pooling"
  bottom: "themagzmu"
  top: "themagzpoolmu"
  pooling_param {
    pool: AVE
    kernel_size: 20
    stride: 20
    pad: 0
  }
}

    layer {
      name: "themagzlogsd"
      type: "Convolution"
      bottom: "encinput_mag"
      top: "themagzlogsd"
      param {
        lr_mult: .1
        decay_mult: 1
      }
      param {
        lr_mult: .2
        decay_mult: 0
      }
      convolution_param {
        num_output: 2
        kernel_size: 1
        stride: 1
        pad: 0
        weight_filler {
          type: "gaussian"
          std: .0001
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }

layer {
  name: "themagzpoollogsd"
  type: "Pooling"
  bottom: "themagzlogsd"
  top: "themagzpoollogsd"
  pooling_param {
    pool: AVE
    kernel_size: 20
    stride: 20
    pad: 0
  }
}

    layer{
      name: "themagzpoolsd"
      type: "Exp"
      bottom: "themagzpoollogsd"
      top: "themagzpoolsd"
    }
    layer{
      name: "themagzvar"
      type: "Eltwise"
      bottom: "themagzpoolsd"
      bottom: "themagzpoolsd"
      top: "themagzvar"
      eltwise_param{
        operation: PROD
      }
    }
    layer{
      name: "themagzmeansq"
      type: "Eltwise"
      bottom: "themagzpoolmu"
      bottom: "themagzpoolmu"
      top: "themagzmeansq"
      eltwise_param{
        operation: PROD
      }
    }
    layer{
      name: "themagzkldiv"
      type: "Eltwise"
      bottom: "themagzmeansq"
      bottom: "themagzvar"
      bottom: "themagzpoollogsd"
      top: "themagzkldiv"
      eltwise_param{
        operation: SUM
        coeff: 0.5
        coeff: 0.5
        coeff: -1.0
      }
    }
    layer{
      name: "themagzloss"
      type: "Reduction"
      bottom: "themagzkldiv"
      top: "themagzloss"
      loss_weight: 1.5625
    }
  layer{
    name: "themagznoise"
    type: "DummyData"
    top: "themagznoise"
    dummy_data_param{
      num: 16
      channels: 2
      height: 1
      width: 1
      data_filler{
        type: "gaussian"
        std: 1.
      }
    }
  }
  layer{
    name: "themagzsdnoise"
    type: "Eltwise"
    bottom: "themagznoise"
    bottom: "themagzpoolsd"
    top: "themagzsdnoise"
    eltwise_param{
      operation: PROD
    }
  }
  layer{
    name: "themagzsample"
    type: "Eltwise"
    bottom: "themagzpoolmu"
    bottom: "themagzsdnoise"
    top: "themagzsample"
    eltwise_param{
      operation: SUM
    }
  }


    layer {
      name: "thezmu"
      type: "Convolution"
      bottom: "trajconv5"
      top: "thezmu"
      param {
        lr_mult: 1
        decay_mult: 0
      }
      param {
        lr_mult: 2
        decay_mult: 0
      }
      convolution_param {
        num_output: 8
        kernel_size: 1
        stride: 1
        pad: 0
        weight_filler {
          type: "gaussian"
          std: .0001
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }

layer {
  name: "thezpoolmu"
  type: "Pooling"
  bottom: "thezmu"
  top: "thezpoolmu"
  pooling_param {
    pool: AVE
    kernel_size: 20
    stride: 20
    pad: 0
  }
}

    layer {
      name: "thezlogsd"
      type: "Convolution"
      bottom: "trajconv5"
      top: "thezlogsd"
      param {
        lr_mult: .1
        decay_mult: 1
      }
      param {
        lr_mult: .2
        decay_mult: 0
      }
      convolution_param {
        num_output: 8
        kernel_size: 1
        stride: 1
        pad: 0
        weight_filler {
          type: "gaussian"
          std: .0001
        }
        bias_filler {
          type: "constant"
          value: 0
        }
      }
    }

layer {
  name: "thezpoollogsd"
  type: "Pooling"
  bottom: "thezlogsd"
  top: "thezpoollogsd"
  pooling_param {
    pool: AVE
    kernel_size: 20
    stride: 20
    pad: 0
  }
}

    layer{
      name: "thezpoolsd"
      type: "Exp"
      bottom: "thezpoollogsd"
      top: "thezpoolsd"
    }
    layer{
      name: "thezvar"
      type: "Eltwise"
      bottom: "thezpoolsd"
      bottom: "thezpoolsd"
      top: "thezvar"
      eltwise_param{
        operation: PROD
      }
    }
    layer{
      name: "thezmeansq"
      type: "Eltwise"
      bottom: "thezpoolmu"
      bottom: "thezpoolmu"
      top: "thezmeansq"
      eltwise_param{
        operation: PROD
      }
    }
    layer{
      name: "thezkldiv"
      type: "Eltwise"
      bottom: "thezmeansq"
      bottom: "thezvar"
      bottom: "thezpoollogsd"
      top: "thezkldiv"
      eltwise_param{
        operation: SUM
        coeff: 0.5
        coeff: 0.5
        coeff: -1.0
      }
    }
    layer{
      name: "thezloss"
      type: "Reduction"
      bottom: "thezkldiv"
      top: "thezloss"
      loss_weight: 1.5625
    }
  layer{
    name: "theznoise"
    type: "DummyData"
    top: "theznoise"
    dummy_data_param{
      num: 16
      channels: 8
      height: 1
      width: 1
      data_filler{
        type: "gaussian"
        std: 1.
      }
    }
  }
  layer{
    name: "thezsdnoise"
    type: "Eltwise"
    bottom: "theznoise"
    bottom: "thezpoolsd"
    top: "thezsdnoise"
    eltwise_param{
      operation: PROD
    }
  }
  layer{
    name: "thezsample"
    type: "Eltwise"
    bottom: "thezpoolmu"
    bottom: "thezsdnoise"
    top: "thezsample"
    eltwise_param{
      operation: SUM
    }
  }


layer{
  name: "thezsamplewide"
  type: "Concat"
  bottom: "thezsample"
  bottom: "thezsample"
  bottom: "thezsample"
  bottom: "thezsample"
  top: "thezsamplewide"
  concat_param{
    axis: 2
  }
}

layer{
  name: "thezsampletall"
  type: "Concat"
  bottom: "thezsamplewide"
  bottom: "thezsamplewide"
  bottom: "thezsamplewide"
  bottom: "thezsamplewide"
  bottom: "thezsamplewide"
  top: "thezsampletall"
  concat_param{
    axis: 3
  }
}

layer {
  name: "imoffset"
  type: "Convolution"
  bottom: "imageconv14"
  top: "imoffset"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 1
    kernel_size: 3
    stride: 4
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imoffsetnorm"
  type: "BatchNorm"
  bottom: "imoffset"
  top: "imoffset"
}


layer {
  name: "imoffsetrelu"
  type: "ReLU"
  bottom: "imoffset"
  top: "imoffset"
}

layer{
  name: "zoffset"
  type: "Eltwise"
  bottom: "thezsampletall"
  bottom: "imoffset"
  top: "zoffset"
  eltwise_param{
    operation: SUM
  }
}


layer{
  name: "zdeconv"
  type: "Deconvolution"
  bottom: "zoffset"
  top: "zdeconv"
  convolution_param {
  num_output: 256
  group: 8
  kernel_size: 8
  stride: 4
  pad: 2
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}


layer{
  name: "themagzsamplewide"
  type: "Concat"
  bottom: "themagzsample"
  bottom: "themagzsample"
  bottom: "themagzsample"
  bottom: "themagzsample"
  top: "themagzsamplewide"
  concat_param{
    axis: 2
  }
}

layer{
  name: "themagzsampletall"
  type: "Concat"
  bottom: "themagzsamplewide"
  bottom: "themagzsamplewide"
  bottom: "themagzsamplewide"
  bottom: "themagzsamplewide"
  bottom: "themagzsamplewide"
  top: "themagzsampletall"
  concat_param{
    axis: 3
  }
}

layer {
  name: "imoffset_mag"
  type: "Convolution"
  bottom: "imageconv14"
  top: "imoffset_mag"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    stride: 4
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "imoffsetnorm_mag"
  type: "BatchNorm"
  bottom: "imoffset_mag"
  top: "imoffset_mag"
}


layer {
  name: "imoffsetrelu_mag"
  type: "ReLU"
  bottom: "imoffset_mag"
  top: "imoffset_mag"
}

layer{
  name: "magoffset"
  type: "Eltwise"
  bottom: "themagzsampletall"
  bottom: "imoffset_mag"
  top: "magoffset"
  eltwise_param{
    operation: SUM
  }
}

layer{
  name: "magzdeconv"
  type: "Deconvolution"
  bottom: "magoffset"
  top: "magzdeconv"
  convolution_param {
  num_output: 256
  group: 2
  kernel_size: 8
  stride: 4
  pad: 2
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer{
  name: "cond_pred_traj"
  type: "Eltwise"
  bottom: "zdeconv"
  bottom: "imageconv14"
  top: "cond_pred_traj"
  eltwise_param{
    operation: PROD
  }
}

layer{
  name: "cond_pred_mag"
  type: "Eltwise"
  bottom: "magzdeconv"
  bottom: "imageconv14"
  top: "cond_pred_mag"
  eltwise_param{
    operation: PROD
  }
}

layer {
  name: "conv15"
  type: "Convolution"
  bottom: "cond_pred_traj"
  top: "conv15"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "batchnorm15"
  type: "BatchNorm"
  bottom: "conv15"
  top: "conv15"
}

layer {
  name: "relu15"
  type: "ReLU"
  bottom: "conv15"
  top: "conv15"
}

layer {
  name: "conv16"
  type: "Convolution"
  bottom: "conv15"
  top: "conv16"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "batchnorm16"
  type: "BatchNorm"
  bottom: "conv16"
  top: "conv16"
}


layer {
  name: "relu16"
  type: "ReLU"
  bottom: "conv16"
  top: "conv16"
}

layer {
  name: "conv17"
  type: "Convolution"
  bottom: "conv16"
  top: "conv17"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "batchnorm17"
  type: "BatchNorm"
  bottom: "conv17"
  top: "conv17"
}


layer {
  name: "relu17"
  type: "ReLU"
  bottom: "conv17"
  top: "conv17"
}


layer {
  name: "conv18"
  type: "Convolution"
  bottom: "conv17"
  top: "conv18"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "batchnorm18"
  type: "BatchNorm"
  bottom: "conv18"
  top: "conv18"
}


layer {
  name: "relu18"
  type: "ReLU"
  bottom: "conv18"
  top: "conv18"
}

layer {
  name: "conv19"
  type: "Convolution"
  bottom: "cond_pred_mag"
  top: "conv19"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
        weight_filler {
          type: "xavier"
          std: 0.01
        }
  }
}

layer { 
  name: "batchnorm19"
  type: "BatchNorm"
  bottom: "conv19"
  top: "conv19"
}


layer {
  name: "relu19"
  type: "ReLU"
  bottom: "conv19"
  top: "conv19"
}

layer{
  name: "conv2reconst"
  type: "Convolution"
  bottom: "conv19"
  top: "conv2reconst"

  convolution_param {
    num_output: 10
    kernel_size: 3
    stride: 1
    pad: 1
        weight_filler {
          type: "xavier"
          std: .001
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult:2
    decay_mult: 0
  }
}

layer{
  name: "conv1reconst"
  type: "Convolution"
  bottom: "conv18"
  top: "conv1reconst"

  convolution_param {
    num_output: 10
    kernel_size: 3
    stride: 1
    pad: 1
        weight_filler {
          type: "xavier"
          std: .001
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult:2
    decay_mult: 0
  }
}

  layer {
    name: "reconstloss"
    type: "EuclideanLoss"
    bottom: "conv1reconst"
    bottom: "normtrajdata"
    top: "reconstloss"
    loss_weight: 0.016
  }

  layer {
    name: "magloss"
    type: "EuclideanLoss"
    bottom: "conv2reconst"
    bottom: "trajnorm"
    top: "magloss"
    loss_weight: 0.0016
  }



layer{
  name: "deconv2convcat"
  type: "Concat"
  bottom: "conv18"
  bottom: "imageconv4"
  top: "deconv2convcat"
  concat_param{
    axis: 1
  }
}

layer{
  name: "deconv2deconv"
  type: "Deconvolution"
  bottom: "deconv2convcat"
  top: "deconv2deconv"
  convolution_param {
  num_output: 640
  group: 640
  kernel_size: 4
  stride: 2
  pad: 1
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer{
  name: "deconv2reconst_inter_one"
  type: "Convolution"
  bottom: "deconv2deconv"
  top: "deconv2reconst_inter_one"

  convolution_param {
    num_output: 256
    kernel_size: 5
    stride: 1
    pad: 2
        weight_filler {
          type: "xavier"
          std: 0.1
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer{
  name: "deconv2reconst"
  type: "Convolution"
  bottom: "deconv2reconst_inter_one"
  top: "deconv2reconst"

  convolution_param {
    num_output: 10
    kernel_size: 3
    stride: 1
    pad: 1
        weight_filler {
          type: "xavier"
          std: 0.1
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  name: "deconv2rawpooldata"
  type: "Pooling"
  bottom: "rawtrajdata"
  top: "deconv2rawpooldata"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}

layer{
  name: "deconv2poolnorm"
  type: "Deconvolution"
  bottom: "avgsampletall"
  top: "deconv2poolnorm"
  convolution_param {
  num_output: 10
  group: 2
  kernel_size: 16
  stride: 8
  pad: 4
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer {
  name: "deconv2poolpower"
  type: "Power"
  bottom: "deconv2poolnorm"
  top: "deconv2poolpower"
  power_param {
   power: -1.0
  }
}

layer {
  name: "deconv2pooldata"
  type: "Eltwise"
  bottom: "deconv2rawpooldata"
  bottom: "deconv2poolpower"
  top: "deconv2pooldata"
  eltwise_param {
    operation: PROD
  }
}


  layer {
    name: "deconv2reconstloss"
    type: "EuclideanLoss"
    bottom: "deconv2reconst"
    bottom: "deconv2pooldata"
    top: "deconv2reconstloss"
    loss_weight: 0.004
  }





layer{
  name: "deconv3deconv"
  type: "Deconvolution"
  bottom: "deconv2reconst_inter_one"
  top: "deconv3deconv"
  convolution_param {
  num_output: 256
  group: 256
  kernel_size: 4
  stride: 2
  pad: 1
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer{
  name: "deconv3convcat"
  type: "Concat"
  bottom: "deconv3deconv"
  bottom: "imagenorm1"
  top: "deconv3convcat"
  concat_param{
    axis: 1
  }
}

layer{
  name: "deconv3reconst"
  type: "Convolution"
  bottom: "deconv3convcat"
  top: "deconv3reconst"

  convolution_param {
    num_output: 10
    kernel_size: 3
    stride: 1
    pad: 1
        weight_filler {
          type: "xavier"
          std: 0.1
        }
    bias_filler {
      type: "constant"
      value: 0
    }
  }

  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
}

layer {
  name: "deconv3rawpooldata"
  type: "Pooling"
  bottom: "rawtrajdata"
  top: "deconv3rawpooldata"
  pooling_param {
    pool: AVE
    kernel_size: 1
    stride: 1
  }
}

layer{
  name: "deconv3poolnorm"
  type: "Deconvolution"
  bottom: "avgsampletall"
  top: "deconv3poolnorm"
  convolution_param {
  num_output: 10
  group: 2
  kernel_size: 32
  stride: 16
  pad: 8
        weight_filler {
          type: "bilinear"
        }
}
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
}

layer {
  name: "deconv3poolpower"
  type: "Power"
  bottom: "deconv3poolnorm"
  top: "deconv3poolpower"
  power_param {
   power: -1.0
  }
}

layer {
  name: "deconv3pooldata"
  type: "Eltwise"
  bottom: "deconv3rawpooldata"
  bottom: "deconv3poolpower"
  top: "deconv3pooldata"
  eltwise_param {
    operation: PROD
  }
}


  layer {
    name: "deconv3reconstloss"
    type: "EuclideanLoss"
    bottom: "deconv3reconst"
    bottom: "deconv3pooldata"
    top: "deconv3reconstloss"
    loss_weight: 0.001
  }



